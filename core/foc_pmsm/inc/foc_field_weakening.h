#pragma once

/*******************************************************************************************************************************
 * @file   foc_field_weakening.h
 *
 * @brief  Header file for field weakening logic
 *
 * @date   2025-06-21
 * @author Aryan Kashem
 *******************************************************************************************************************************/

/* Standard library Headers */
#include <stdbool.h>

/* Inter-component Headers */

/* Intra-component Headers */
#include "motor_error.h"

/**
 * @defgroup FOC_PMSMMotor FOC control motor class
 * @brief    PMSM FOC control motor class
 * @{
 */

/**
 * @brief Field weakening configuration parameters
 */
struct FieldWeakeningConfig_t {
  float voltage_margin;   /**< Voltage margin ratio (e.g. 0.95 = 95% of available DC voltage) */
  float id_min;           /**< Minimum d-axis current allowed (negative value for field weakening limit) */
  float id_max;           /**< Maximum d-axis current allowed (typically 0 or slightly positive) */
  float k_fw;             /**< Field weakening gain (aggressiveness of weakening) */
};

/**
 * @brief Field weakening internal state
 */
struct FieldWeakeningState_t {
  float id_ref;           /**< Current d-axis reference generated by field weakening */
  struct FieldWeakeningConfig_t *config; /**< Config settings */
};

/**
 * @brief   Initialize field weakening system
 * @param   state Pointer to field weakening state structure
 * @return  MOTOR_OK if successful
 *          MOTOR_INVALID_ARGS if state pointer is null
 */
MotorError_t field_weakening_init(struct FieldWeakeningState_t *state);

/**
 * @brief   Field weakening update function (core logic)
 * 
 * @param   state Pointer to state object
 * @param   config Pointer to config parameters
 * @param   vd Current d-axis voltage output from PID
 * @param   vq Current q-axis voltage output from PID
 * @param   vbus Measured DC bus voltage
 * @return  MOTOR_OK if successful
 *          MOTOR_INVALID_ARGS if state or config pointers are null
 */
MotorError_t field_weakening_update(struct FieldWeakeningState_t *state, const struct FieldWeakeningConfig_t *config, float vd, float vq, float vbus);

/** @} */
